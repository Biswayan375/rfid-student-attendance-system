<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <title>Track Attendance</title>
    <style>
        .info-text {
            display: block;
            text-align: center;
            font-size: 1.5rem;
            color: rgb(161, 161, 161);
        }
        .inner-table {
            background-color: #dedede;
            padding: 10px;
            border-radius: 6px;
        }
    </style>
</head>
<body>
    <%- include('./partials/navbar.ejs') %>
    <hr><h1 class="display-3">Track Attendance</h1><hr>

    <!-- Reset confirm modal -->
    <div style="backdrop-filter: blur(5px)" class="modal fade" id="resetConfirmModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Are You Sure?</h5>
                    <button id="reset-modal-close-btn" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div style="text-align: center" class="modal-body">
                    Once you reset a batch's attendance, all attendance records corresponding to the batch are gone and is <b>not recoverable</b>.
                </div>
                <div class="modal-footer">
                    <button id="resetConfirmBtn" onclick="return handleReset(event)" class="btn btn-primary btn-sm" data-id="">Yes</button>
                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <button onclick="return fetchRecords(event)" id="refreshBtn" class="btn btn-success btn-lg m-2">Refresh</button>
        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#resetConfirmModal">Reset</button>
        <div>
            <label style="margin-left: 10px; font-size: 22px; color: #717171" for="sem-select">Select Batch</label>
            <select onchange="return fetchRecords(event)" style="width: 50%" class="form-select m-2" id="batch-select" aria-label="Default select example"></select>
        </div>

        <div style="width: 90%;
        margin: auto;
        padding: 20px;
        border-radius: 10px;
        max-height: 350px;
        overflow-y: auto;
        box-shadow: 0px 0px 11px 1px #999797;" id="table-container"></div>
    </div>



    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script>
        // To make the navigation bar link active for this page
        for (i = 0; i < navbar.children.length; i++) {
            let child = navbar.children[i];
            if (child.id === 'track-nav')
                child.children[0].classList.add("active");
            else
                if (child.id != '') child.children[0].classList.remove('active');
        }

        async function getBatchData() {
            let result = await fetch('http://localhost:5000/getAllBatches');
            result = await result.json();
            // console.log(result);
            return result.result;
        }

        function fillBatchOptions(data) {
            let select = document.getElementById('batch-select');
            select.innerHTML = '';
            for (let i = 0; i < data.length; i++)
                select.innerHTML += `
                    <option value='${data[i].id}'>${data[i].bname} (${data[i].tname})</option>
                `;
        }


        async function getAttendanceData() {
            let batchID = document.getElementById('batch-select').value;
            if (batchID != null && batchID != undefined && batchID != '') {
                let result = await fetch('http://localhost:5000/track-specific-attendance', {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ "id": batchID })
                })
                result = await result.json();
                return result;
            } else {
                return {"success": true, "batchData": []};
            }
        }

        function fillTable(data) {
            // console.log(result);

            let tableContainer = document.getElementById('table-container');
            tableContainer.innerHTML = ``;

            if (result.success) {
                let classData = result.batchData;
                let studentData = result.studentData;

                if (classData.length > 0) {
                    populateTable(tableContainer, classData, studentData);
                } else {
                    tableContainer.innerHTML = `<span class="info-text">No records</span>`;
                }
            } else {
                tableContainer.innerHTML = `<span class="info-text">Something went wrong. Contact support!</span>`
            }
        }

        function populateTable(tableContainer, classData, studentData) {
            tableContainer.innerHTML = `
                <table class="table">
                    <thead style="text-align: center">
                        <tr>
                            <th scope="col">Class Dates</th>
                            <th scope="col">Attendance (Only Present Students)</th>
                        </tr>
                    </thead>
                    <tbody style="text-align: center" id="main-table-body"></tbody>
                </table>
            `;

            let str = '';
            let mainTableBody = document.getElementById("main-table-body");
            for (let i = 0; i < classData.length; i++) {
                str += `
                    <tr>
                        <td>
                            ${new Date(classData[i].classDates).toLocaleDateString()}
                        </td>
                        <td style="text-align: center">
                `;

                str += `
                            <div class="inner-table">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th scope="col">Name</th>
                                            <th scope="col">Sem</th>
                                            <th scope="col">Roll</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                `;
                for (let j = 0; j < studentData.length; j++) {
                    if (new Date(studentData[j].attendanceDate).toLocaleDateString() == new Date(classData[i].classDates).toLocaleDateString()) {
                        str += `
                                        <tr>
                                            <td>${studentData[j].studentName}</td>
                                            <td>${studentData[j].studentSem}</td>
                                            <td>${studentData[j].studentRoll}</td>
                                        </tr>
                        `;
                    }
                }
                str += `
                                    </tbody>
                                </table>
                            <div>
                        </td>
                    </tr>
                `;
            }
            mainTableBody.innerHTML += str;
        }




        async function handleReset(event) {
            let batch = document.getElementById('batch-select').value;
            await fetch('http://localhost:5000/track', {
                method: "DELETE",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ "id": batch })
            })
            document.getElementById('reset-modal-close-btn').click();
            document.getElementById('refreshBtn').click();
        }


        async function fetchRecords(event) {
            result = await getAttendanceData();
            fillTable(result);
        }

        window.onload = async event => {
            let result = await getBatchData();
            fillBatchOptions(result);
            fetchRecords();
        }
    </script>
</body>
</html>